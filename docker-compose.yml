# Docker Compose with PostgreSQL database for BudgetWise.
# Services:
# - postgres: PostgreSQL database with healthcheck and persisted volume
# - backend: FastAPI + Alembic migrations
# - frontend: Next.js application

services:
  postgres:
    image: postgres:16-alpine
    container_name: budgetwise-postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - db-network

  backend:
    build: ./backend
    container_name: budgetwise-backend
    environment:
      # PostgreSQL connection string (SQLAlchemy/SQLModel format)
      - DATABASE_URL=postgresql+psycopg://${DB_USER}:${DB_PASSWORD}@postgres:${DB_PORT}/${DB_NAME}
      - PYTHONUNBUFFERED=1
    volumes:
      # Mount the backend code to allow hot reloading in development.
      # Comment out in production builds to improve performance.
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - db-network
      - webapp
    develop:
      watch:
        # Restart backend on source changes (bind mount already syncs files)
        - action: restart
          path: ./backend/app
        - action: restart
          path: ./backend/alembic
        - action: restart
          path: ./backend/alembic.ini
        # Rebuild image when dependencies definition changes
        - action: rebuild
          path: ./backend/pyproject.toml

  frontend:
    build: ./frontend
    container_name: budgetwise-frontend
    environment:
      API_BASE_URL: ${API_BASE_URL}
    volumes:
      # Mount the frontend code to allow hot reloading in development.
      # Comment out in production builds to improve performance.
      - ./frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - webapp
    develop:
      watch:
        # Restart frontend server on source/config updates
        - action: restart
          path: ./frontend
          ignore:
            - node_modules/
            - .next/
            - .turbo/
            - .git/
        # Rebuild image when lockfile or package manifest changes
        - action: rebuild
          path: ./frontend/pnpm-lock.yaml
        - action: rebuild
          path: ./frontend/package.json

volumes:
  postgres_data:
    driver: local

networks:
  db-network:
    driver: bridge
    internal: true
  webapp:
    driver: bridge