# Docker Compose with PostgreSQL database for BudgetWise.
# Services:
# - postgres: PostgreSQL database with healthcheck and persisted volume
# - backend: FastAPI + Alembic migrations
# - frontend: Next.js application

services:
  postgres:
    image: postgres:16-alpine
    container_name: budgetwise-postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db-network

  backend:
    build: ./backend
    container_name: budgetwise-backend
    environment:
      # PostgreSQL connection string (SQLAlchemy/SQLModel format)
      DB_ECHO: ${DB_ECHO:-false}
      DATABASE_URL: postgresql+psycopg://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      PYTHONUNBUFFERED: 1
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - db-network
      - webapp

  frontend:
    build: 
      context: ./frontend
      target: runner
    container_name: budgetwise-frontend
    environment:
      API_BASE_URL: ${API_BASE_URL}
      NEXT_TELEMETRY_DISABLED: 1
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - webapp

volumes:
  postgres_data:
    driver: local

networks:
  db-network:
    driver: bridge
    internal: true
  webapp:
    driver: bridge